version: '3.8'

services:
  core-transfers-app:
    image: mt-core-transfers:latest
    container_name: core-transfers-app
    depends_on:
      - core-transfers-postgres
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://core-transfers-postgres:5432/mt_core_transfers
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_PROFILES_ACTIVE=dev

  core-transfers-postgres:
    image: postgres:latest
    container_name: core-transfers-postgres
    ports:
      - "5450:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-U", "postgres"]
      interval: 5s
      timeout: 1s
      retries: 3
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/01.sql

  elasticsearch:
    # Просто через docker pull elasticsearch:8.7.1
    # image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    image: elasticsearch:8.7.1
    container_name: elasticsearch_springboot
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elastic

  kibana:
    # image: docker.elastic.co/kibana/kibana:8.7.1
    image: kibana:8.7.1
    container_name: kibana_springboot
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch
    networks:
      - elastic

  logstash:
    # image: docker.elastic.co/logstash/logstash:8.7.1
    image: logstash:7.17.28
    container_name: logstash_springboot
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elastic
    depends_on:
      - elasticsearch

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana-enterprise:latest
    container_name: grafana
    ports:
      - "3000:3000"

networks:
  elastic:
    driver: bridge

volumes:
  elasticsearch_data:
    driver: local